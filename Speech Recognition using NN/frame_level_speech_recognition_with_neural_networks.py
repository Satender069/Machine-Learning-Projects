# -*- coding: utf-8 -*-
"""Frame Level Speech Recognition with Neural Networks.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1fjaGwOvzZpWaVesrE0iVVH2tAMxLmO8z
"""

import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import Model,layers
from tensorflow.keras.layers import *
from tensorflow.keras.models import Sequential
import numpy as np

from google.colab import drive
drive.mount('/content/drive')
x=np.load('/content/drive/MyDrive/ML_assign/dev_data.npy',allow_pickle=True,encoding='latin1')
y=np.load('/content/drive/MyDrive/ML_assign/dev_labels(1).npy',allow_pickle=True,encoding='latin1')

def my_sequential_model(inp_dim, noc=138):
  model = Sequential()
  model.add(Dense(input_shape=inp_dim, units=256, name='dense-1'))
  model.add(Activation('relu'))
  model.add(Dense(units=256))
  model.add(BatchNormalization())
  model.add(Activation('relu'))
  model.add(Dense(units=256, activation='relu'))
  model.add(BatchNormalization())
  model.add(Dense(units=256, activation='relu'))
  model.add(BatchNormalization())
  model.add(Flatten())
  model.add(Dense(units=256, activation='relu'))
  model.add(Dense(units=noc, activation='softmax'))
  return model

from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test = train_test_split(x, y,test_size=0.2, random_state=42)
y_train=tf.keras.utils.to_categorical(y_train)
y_test=tf.keras.utils.to_categorical(y_test)
print(x_train.shape,x_test.shape,y_train.shape,y_test.shape)

my_model=my_sequential_model(x[0].shape)
base_learning_rate = 0.0001
my_model.compile(optimizer=tf.keras.optimizers.Adam(lr=base_learning_rate),
                       loss="categorical_crossentropy",
                       metrics=['accuracy'])
my_model.summary()

history = my_model.fit(x_train, y_train, batch_size=32, validation_data=(x_test, y_test), verbose=True, epochs=30)

test_data=np.load('/content/drive/MyDrive/ML_assign/test_data.npy',allow_pickle=True,encoding='latin1')
prediction=my_model.predict_classes(test_data)
label=prediction.tolist()
index=[i for i in range(len(label))]
import pandas as pd
final_df = pd.DataFrame(
    {'id': index,
     'label': label})
final_df

from google.colab import files

final_df.to_csv("ms16069.csv", index=False)
files.download('ms16069.csv')